Encapsulation
The meaning of Encapsulation, is to make sure that "sensitive" data is hidden from users. To achieve this, you must:

declare class variables/attributes as private
provide public get and set methods to access and update the value of a private variable
Get and Set
You learned from the previous chapter that private variables can only be accessed within the same class (an outside class has no access to it). However, it is possible to access them if we provide public get and set methods.

The get method returns the variable value, and the set method sets the value.

Syntax for both is that they start with either get or set, followed by the name of the variable, with the first letter in upper case:

Encapsulation is one of the fundamental principles of Object-Oriented Programming (OOP). It refers to the bundling of data (fields) and methods that operate on that data into a single unit or class. By encapsulating these elements, access to the data can be restricted using access modifiers like private, and controlled through public methods such as getters and setters.

The key benefits of encapsulation are:

Data hiding: By marking class fields as private, you restrict direct access from external code.
Controlled access: You can provide public getter and setter methods to allow controlled access and modification of the private fields.
Improved security: You can enforce business rules when accessing or modifying the data (e.g., validating input before setting a value).
Modularity and maintainability: The internal implementation can change without affecting external code that relies on the public interface.